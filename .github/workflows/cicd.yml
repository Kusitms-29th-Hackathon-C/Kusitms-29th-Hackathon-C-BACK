name: Main Service CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: üçÄ JDK 17 ÏÑ§Ï†ï
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üçÄ application.yml ÏÑ§Ï†ï
        run: |
          cd ./src/main
          mkdir resources
          cd ./resources
          touch ./application.yml
          echo "$APPLICATION_MAIN" > ./application.yml
        env:
          APPLICATION_MAIN: ${{ secrets.APPLICATION_MAIN }}

      - name: üçÄ gradle buildÎ•º ÏúÑÌïú Í∂åÌïú ÏÑ§Ï†ï
        run: |
          chmod +x gradlew

      - name: üçÄ gradle build
        run: |
          ./gradlew build -x test

      - name: üçÄ docker image build ÌõÑ docker hubÏóê push
        run: |
          docker login -u ${{ secrets.MAIN_DOCKER_USERNAME }} -p ${{ secrets.MAIN_DOCKER_PASSWORD }}
          docker build -t ${{ secrets.MAIN_DOCKER_REPOSITORY }}/${{ secrets.MAIN_DOCKER_IMAGE }} .
          docker push ${{ secrets.MAIN_DOCKER_REPOSITORY }}/${{ secrets.MAIN_DOCKER_IMAGE }}
      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.MAIN_DOCKER_IMAGE }}
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.MAIN_DOCKER_IMAGE }}
          cache-to: type=inline

      - name: connect ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_PORT }}
          script: |
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.MAIN_DOCKER_IMAGE }}
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker run -d -p 8080:80 ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.MAIN_DOCKER_IMAGE }}
            docker image prune -f
